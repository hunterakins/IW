install.package(seewave)
install.packages(seewave)
install.packages('seewave')
exit
library(tseries)
install.packages(tseries)
install.packages('tseries')
install.packages('quantmod','curl')
install.packages('quantmod')
exit
install.packages('tseries')
exit
?Reduce
q
q()
install.packages('rootSolve')
exit
q()
install.packages('pracma')
exit
exit
help eigen
eigen ?
help ?
eigen help
help
? eigen
install.packages(geigen)
install.packages('geigen;)
install.packages('geigen')
install.packages('geigen') 
? approx
q()
install.packages('scatterplot3d')
? scatterplot3d
? scatterplot3d
?? scatterplot3d
install.packages('rjson')
exit
library('rjson')
fromJSON(file="config/run1.json')
fromJSON(file="config/run1.json")
q
feather
df <- read_feather('3dfield.fthr')
df <- feather_read('3dfield.fthr')
df <- readfeather('3dfield.fthr')
df <- read_feather('3dfield.fthr')
library(feather)
df <- read_feather('3dfield.fthr')
df
q
contour(df$disp)
contour(df$disp[depth==0])
contour(df$disp[df$depth==0])
df$disp[df$depth==0]
contour(df$x[df$depht==0],df$y[df$depth==0], df$disp[df$depth==0])
contour(df$x[df$depth==0],df$y[df$depth==0], df$disp[df$depth==0])
library(ggplot2)
v <- ggplot(df,aes(x,y,z=disp))
v + geom_contour()
df[depth==0]
df[df$depth==0]
ndf <- df[df$depth==0]
ndf <- df[,df$depth==0]
ndf <- df[df$depth==0,]
head(ndf)
v <- ggplot(ndf,aes(x,y,z=disp))
v + geom_contour()
v <- ggplot(ndf,aes(x,y,z=disp))
nrow(ndf)
v + geom_contour()
v <- ggplot(ndf,aes(x,y,z= 'disp'))
v + geom_contour()
v <- ggplot(ndf,aes(x,y,z= disp))
v + geom_contour()
v <- ggplot(ndf,aes(x=x,y=y,z = disp))
v + geom_contour()
head(ndf)
ndf
v <- ggplot(ndf,aes(x=x,y=y,z = disp))
v + stat_density2d()
v + geom_point(aes(colour=disp))
v + aes(x,y,z=disp,fill=disp)
v + geom_tiles()
v + geom_tile()
v + geom_tile(aes(colour=disp))
v + geom_tile(fill=disp,aes(colour=disp))
v + geom_tile(fill=z,aes(colour=disp))
v <- ggplot(ndf,aes(x=x,y=y,z = disp))
v + geo_contour()
v + geom_contour()
v + stat_density2d()
v + geom_contour_fill()
v + geom_density_2d()
v + geom_raster()
v + geom_raster(aes(fill=disp))
v + geom_raster(aes(fill=z))
ndf['disp']
ndf[ndf['disp'] > 1 ]
ndf[ndf['disp'] < 1 ]
ndf$disp
v + geom_raster(aes(fill=disp))
v + geom_raster_2d(aes(fill=disp))
v + geom_raster_2d(aes(fill=disp),interpolate=TRUE)
v + geom_raster(aes(fill=disp),interpolate=TRUE)
v + stat_density2d()
v + stat_density2d(aes(fill=disp))
v + stat_density2d(aes(fill=stat(disp)))
v + stat_density_2d(aes(fill=stat(disp)))
v + stat_density_2d(aes(fill=disp))
v + stat_density_2d(aes(fill=z))
v + stat_density_2d(geom="raster")
v + stat_density_2d(geom="point")
plot(ndf$x,ndf$y)
duplicated(ndf)
ndf[duplicated(ndf$x) & duplicated(ndf$y) ,]
ndf[duplicated(ndf$x) ,]
unique(ndf)
library(dlplyr)
library(dplyr)
library(dplyr
)
duplicated(ndf)
ndf[duplicated(ndf)]
ndf[duplicated(ndf),]
q
ndf[duplicated(ndf),]
ndf[duplicated(ndf$x),]
duplicated(ndf[,4,5]
)
ndf[duplicated(ndf[,4,5])]
ndf[duplicated(ndf[,4,5]),]
ndf[duplicated(ndf[,4:5]),]
plot(ndf$x,ndf$y)
exit
exit
n = diag(1000)
n
solve(n)
n = diag(1)
n
n = diag(10)
n
solve(n)
n = 2*diag(10)
solve(n)
q()
rep(1:3,2)
matrix(1:3,3,2)
m <- matrix(1:3,3,2)
m
cbind(m,m)
matrix
matrix()
mo <- matrix()
length(mo)
cbind(mo,m)
library(ggplot2)
ggplot2::
ggplot2.scatterplot
ggplot2.scatterplot(
)
q
q
q()
feather_read
read_feather
library('feather')
files <- list.files(path="../data/3d",pattern="^run")
source('../src/timeseries_analysis.r')
merge_time_frames("../data/3d',0,1:100)
merge_time_frames("../data/3d",0,1:100)
merge_time_frames("../data/3d",0,1:200)
df <- merge_time_frames("../data/3d",0,1:200)
nrow(df)
q
exit
q()
install.packages('parallel')
library(parallel)
detectCores()
cl <- makeCluster(4)
clusterEvalQ(cl, 2+2)
A <- Matrix(rnorm(100),10)
A <- matrix(rnorm(100),10)
A
dim(A)
inv(A)
solve(A)
system.time(solve(A)
)
system.time(solve(A))
A <- matrix(rnorm(1000000),1000)
system.time(solve(A))
clusterExport(cl, "A")
clusterEvalQ(cl, solve(A))
library(doParrallel)
install.packages(doParrallel)
install.packages('doParallel')
exit
q()
ginv
require(MASS
)
ginv
A <- matrix(rnorm(1000000),1000)
system.time(solve(A))
system.time(ginv(A))
install.packages('Rfast')
system.time(spdinv(A))
spdinv
Rfast
library(Rfast)
library('Rfast')
exit
install.packages('gridExtra')
exit
ls
